name: pull_request

on:
  pull_request:
    branches: [main]

jobs:
  pull_request:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # pin@v2

      - uses: azure/login@77f1b2e3fb80c0e8645114159d17008b8a2e475a # pin@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # pin@v1
        with:
          terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform fmt
        working-directory: terraform/
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        working-directory: terraform/
        id: init
        run: terraform init

      - name: Terraform validate
        working-directory: terraform/
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        working-directory: terraform/
        id: plan
        env:
          TF_VAR_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          TF_VAR_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TF_VAR_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          TF_VAR_TENANT_ID: ${{ secrets.TENANT_ID }}
        run: terraform plan -no-color
        continue-on-error: true

      # Post comment on PR with development plan info
      - uses: actions/github-script@5d03ada4b0a753e9460b312e61cc4f8fdeacf163 # pin@0.9.0
        env:
          PLAN: "terraform ${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### Terraform Plan - Production ü™ê
            - Terraform Format and Style üñå: \`${{ steps.fmt.outcome }}\`
            - Terraform Initialization ‚öôÔ∏è: \`${{ steps.init.outcome }}\`
            - Terraform Validation ü§ñ: \`${{ steps.validate.outcome }}\`
            - Terraform Plan üìñ: \`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            > Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`terraform/\`, Workflow: \`${{ github.workflow }}\``;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
